// <auto-generated />
using System;
using DataAccessToProjectMenza.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessToProjectMenza.Migrations
{
    [DbContext(typeof(MenzaDbContext))]
    [Migration("20240824133039_NewTableOrder")]
    partial class NewTableOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelMenza.Model.Fakultet", b =>
                {
                    b.Property<int>("Fakultet_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Fakultet_Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Fakultet_Id");

                    b.ToTable("Fakultets");
                });

            modelBuilder.Entity("ModelMenza.Model.Obrok", b =>
                {
                    b.Property<int>("Obrok_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Obrok_Id"));

                    b.Property<string>("Obrok_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Obrok_Id");

                    b.ToTable("Obroci");
                });

            modelBuilder.Entity("ModelMenza.Model.Order", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Id"));

                    b.Property<int>("ObrokId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Order_Id");

                    b.HasIndex("ObrokId");

                    b.HasIndex("StudentId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ModelMenza.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Fakultet_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearOfStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Fakultet_Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ModelMenza.Model.PersonDetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<int>("Detail_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonDetails");
                });

            modelBuilder.Entity("ModelMenza.Model.StudentObrok", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ObrokId")
                        .HasColumnType("int");

                    b.HasKey("Id", "ObrokId");

                    b.HasIndex("ObrokId");

                    b.ToTable("StudentObroci");
                });

            modelBuilder.Entity("ModelMenza.Model.Order", b =>
                {
                    b.HasOne("ModelMenza.Model.Obrok", "Obrok")
                        .WithMany("Orders")
                        .HasForeignKey("ObrokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelMenza.Model.Person", "Person")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obrok");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ModelMenza.Model.Person", b =>
                {
                    b.HasOne("ModelMenza.Model.Fakultet", "Fakultet")
                        .WithMany("Persons")
                        .HasForeignKey("Fakultet_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakultet");
                });

            modelBuilder.Entity("ModelMenza.Model.PersonDetail", b =>
                {
                    b.HasOne("ModelMenza.Model.Person", "Person")
                        .WithOne("PersonDetail")
                        .HasForeignKey("ModelMenza.Model.PersonDetail", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ModelMenza.Model.StudentObrok", b =>
                {
                    b.HasOne("ModelMenza.Model.Person", "Person")
                        .WithMany("StudentObroci")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelMenza.Model.Obrok", "Obrok")
                        .WithMany("StudentObroci")
                        .HasForeignKey("ObrokId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Obrok");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ModelMenza.Model.Fakultet", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("ModelMenza.Model.Obrok", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("StudentObroci");
                });

            modelBuilder.Entity("ModelMenza.Model.Person", b =>
                {
                    b.Navigation("PersonDetail")
                        .IsRequired();

                    b.Navigation("StudentObroci");
                });
#pragma warning restore 612, 618
        }
    }
}
